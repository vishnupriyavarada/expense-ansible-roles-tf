- name: disable current nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql

- name: create expense user
  ansible.builtin.user:
    name: expense

# commenting common role because in meta folder we have put dependency as common so first it will run meta. so here its not needed
# - name: include from common role
#   # tags:
#   # - deployment
#   include_role:
#     name: common
#     task_from: main

# - name: create app directory
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: download backend code
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

# - name: unzip backend code
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes  # Unarchive a file that is already on the remote machine.Here remote machine is backend server.

- name: Install dependencies
  tags: 
  - deployment
  community.general.npm:
    path: /app

- name: copy backend service
  ansible.builtin.template: #it will search in templates folder
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install python libs
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
  - cryptography
  - PyMySQL

- name: import mysql data
  community.mysql.mysql_db:
    state: import
    name: all
    login_user: "{{ MYSQL_USER }}"
    login_password: "{{ MYSQL_PASSWORD }}"
    login_host: "{{ MYSQL_HOST }}"
    target: /app/schema/backend.sql

- name: daemon reload and restart service
  tags: 
  - deployment
  ansible.builtin.systemd_service:
    enabled: true
    state: restarted
    daemon_reload: true
    name: backend